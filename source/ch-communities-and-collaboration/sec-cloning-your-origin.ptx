<?xml version="1.0" encoding="UTF-8"?>

<section
  xml:id="topic-cloning-your-origin"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  >
  <title>Cloning Your Origin</title>

  <introduction>
 	  <p>
      The next step in the basic FOSS workflow is to ensure that you have a <term>clone</term> your <term>origin</term> repository in your development environment as shown in <xref ref="fig-basic-workflow-clone" />.  Having a clone of your origin in your development environment will allow you to edit the files to fix the issue that you have been assigned and add those changes to the repository.
    </p>

    <p>
      <figure 
        xml:id="fig-basic-workflow-clone"
        >
        <caption>
          Cloning your origin repository from your GitHub space to your development environment.
        </caption>
        <image source="images/ch-communities-and-collaboration/basic-workflow-clone.png" width="75%">
          <description>Creating a clone of your origin repository creates a copy of it in your development environment. This copy is your local copy.
          </description>
        </image>
      </figure>
    </p>

    <p component="vscode-kit-client">
      In some development environments cloning the origin requires that you use a command like <c>git clone &lt;originURL&gt;.git</c> to create the clone.
    </p>
    <p component="vscode-kit-client">
      However, the development environment you have opened in GitPod simplifies this process for you. Recall, that you provided the URL of your origin repository when opening the development environment in <xref ref="ex-create-kit-client-vscode-b" />. When you did that, a clone of your origin was automatically created for you in your development environment. 
    </p>
  </introduction>

  <!-- Linux KitClient -->
  <exercises>
    <title />

    <exercise
      xml:id="ex-find-clone-url-linux"
      label="ex-find-clone-url-linux"
      component="linux-kit-client">
      <introduction>
        In order to clone a repository into your development environment you will need the <term>clone URL</term> for that repository.  The steps in this exercise will help you find the clone URL for your origin repository.
      </introduction>
      <task
        xml:id="ex-find-clone-url-linux-a"
        label="ex-find-clone-url-linux-a">
        <statement>
          <p>
            Visit the GitHub page for your origin repository.
          </p>
        </statement>
        <hint>
          <p>
            You can find the URl of your origin (i.e. your fork of the GitKit FarmData2 upstream) in your answer to <xref ref="ex-fork-url" />.
          </p>
        </hint>
      </task>
      <task
        xml:id="ex-find-clone-url-linux-b"
        label="ex-find-clone-url-linux-b">
        <statement>
          <p>
            Find and click the green "Code" button. 
            
            <image source="images/ch-communities-and-collaboration/codeButton.png"
                width="10%">
                <description>
                  The green "Code" button in GitHub.
                </description>
              </image>
          </p>
        </statement>
      </task>
      <task
        xml:id="ex-find-clone-url-linux-c"
        label="ex-find-clone-url-linux-c">
        <statement>
          <p>
            Open the "Local" and "HTTPS" tabs as shown here:

            <image source="images/ch-communities-and-collaboration/gitHubCloneURL.png"
                width="50%">
                <description>
                  The GitHub dialog showing the clone URL.
                </description>
              </image>

            The URL in the "Clone using the web URL" box is the clone URL that you will need to clone your origin repository.
          </p>
        </statement>
      </task>
    </exercise>

    <exercise
      xml:id="ex-clone-url-linux"
      label="ex-clone-url-linux"
      component="linux-kit-client">
      <statement>
        <p>
          Copy and paste the clone URL that you will use to clone your origin as your answer to this exercise. 
        </p>
        <p>
          <var width="55" />
        </p>
      </statement>
      
      <setup>
        <var>
          <condition string="^https://github.com/(?!(FarmData2|DickinsonCollege)).+/.+.git$">
            <feedback>
              <p>
                Thank you.
              </p>
            </feedback>
          </condition>
          <condition string="^https://github.com/DickinsonCollege/.+.git">
            <feedback>
              <p>
                It looks like you might be trying to use the upstream repository instead of your origin. 
              </p>
            </feedback>
          </condition>
          <condition string="^https://github.com/FarmData2/.+.git">
            <feedback>
              <p>
                It looks like you might be trying to use the upstream repository instead of your origin. 
              </p>
            </feedback>
          </condition>
          <condition string=".*">
            <feedback>
              <p>
                 The clone URL should have the format <c>https://github.com/yourGitHubUsername/theRepoName.git</c>.
              </p>
            </feedback>
          </condition>
        </var>
      </setup>
      <hint>
        Be sure you are using your GitHub origin repository (see <xref ref="ex-fork-url" />). This clone URL should contain your GitHub username and end in <c>.git</c>.
      </hint>
    </exercise>

    <exercise
      xml:id="ex-clone-origin-linux"
      label="ex-clone-origin-linux"
      component="linux-kit-client">
      <introduction>
        <p>
          Now that you have the clone URL for your origin repository, use the tasks in this exercise to clone your origin into your development environment.
        </p>
      </introduction>
      <task
        xml:id="ex-clone-origin-linux-a"
        label="ex-clone-origin-linux-a">
        <statement>
          <p>
            Use the following command in the Terminal to clone your origin repository into your development environment:
          </p>
          <p>
            <c>git clone &lt;clone URL&gt;</c>
          </p>
          <p>
            Be sure to replace <c>&lt;clone URL&gt;</c> with the clone URL you found in <xref ref="ex-clone-url-linux" />.
          </p>
        </statement>
      </task>
      <task
        xml:id="ex-clone-origin-linux-b"
        label="ex-clone-origin-linux-b">
        <statement>
          Copy and paste the output from your command in <xref ref="ex-clone-origin-linux-a" /> as your answer here.
        </statement>
        <response />
      </task>
      <task
        xml:id="ex-clone-origin-linux-c"
        label="ex-clone-origin-linux-c">
        <statement>
          Examine the output in <xref ref="ex-clone-origin-linux-b" />.  Into which directory in your development environment was your GitKit FarmData2 origin cloned?
        </statement>
        <response />
        <hint>
          <p>
            Look for a line in the output that begins with "Cloning into". 
          </p>
        </hint>
      </task>
      <task
        xml:id="ex-clone-origin-linux-d"
        label="ex-clone-origin-linux-d">
        <statement>
          <p>
            Use the <c>ls</c> command to confirm that the directory you identified in <xref ref="ex-clone-origin-linux-c" /> now exists.
          </p>
          <p>
            If it it does not, check the output in <xref ref="ex-clone-origin-linux-b" /> for error messages and try <xref ref="ex-clone-origin-linux-a" /> again.
          </p>
        </statement>
      </task>
    </exercise>

    <exercise
      xml:id="ex-kit-tty-linux"
      label="ex-kit-tty-linux"
      component="linux-kit-client">
      <statement>
        <p>
          The the output in <xref ref="ex-clone-origin-linux-b" /> should contain a message from the <term>Kit-tty</term>. What is the <term>Kit-tty</term>?
        </p>
      </statement>
      <response />
      <hint>
        <p>
          The "Kit-tty" introduces itself using the line
          "ðŸ˜ºðŸ’» Meow, Kit-tty here!" Read the description of the "Kit-tty" that follows this line.
        </p>
      </hint>
    </exercise>

    <p component="linux-kit-client">
      Be sure to keep your eyes open for messages from the Kit-tty as you work on the GitKit exercises. The Kit-tty will help you to stay on track and may save you a lot of time by preventing you from going down an incorrect path.
    </p>

    <exercise 
      xml:id="ex-close-terminal-linux"
      label="ex-close-terminal-linux"
      component="linux-kit-client">
      <introduction>
        <p>
          Use the final line of output in <xref ref="ex-clone-origin-linux-b" /> that begins with "IMPORTANT" to complete this exercise.
        </p>
      </introduction>
      <task 
        xml:id="ex-close-terminal-linux-a"
        label="ex-close-terminal-linux-a">
        <statement>
          <p>
            What does the "IMPORTANT" line ask you to do?
          </p>
        </statement>
        <choices randomize="yes">
          <choice correct="yes">
            <statement>
              <p>
                Close the terminal and open a new one.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Take the Kit-tty for a walk.
              </p>
            </statement>
            <feedback>
              <p>
                I'm sure the Kit-tty would like that, but its not the correct answer.
              </p>
            </feedback>
          </choice>
          <choice>
            <statement>
              <p>
                Use the <c>git clone</c> command.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Delete some unnecessary files.
              </p>
            </statement>
          </choice>
        </choices>
      </task>
      <task
        xml:id="ex-close-terminal-linux-b"
        label="ex-close-terminal-linux-b">
        <statement>
          <p>
            If you haven't already, close the Terminal you are currently using and open a new one.
          </p>
          <p>
            There is a technical reason for having to close your current Terminal and open a new. But the details for why this is necessary are unimportant.
          </p>
        </statement>
      </task>
    </exercise>

    <exercise
      xml:id="ex-explore-clone-linux"
      label="ex-explore-clone-linux"
      component="linux-kit-client">
      <introduction>
        <p>
          In this exercise you will briefly explore the GitKit FarmData2 repository that you have cloned into your development environment. 
        </p>
      </introduction>
      <task
        xml:id="ex-explore-clone-linux-a"
        label="ex-explore-clone-linux-a">
        <statement>
          <p>
            Use the <c>cd</c> command in the Terminal to change into the directory containing your clone of the GitKit FarmData2 repository.
          </p>
        </statement>
        <hint>
          <p>
            See <xref ref="ex-clone-origin-linux-c" /> for the name of the directory.
          </p>
        </hint>
      </task>
      <task
        xml:id="ex-explore-clone-linux-b"
        label="ex-explore-clone-linux-b">
        <statement>
          <p>
            Use the <c>ls -a</c> command to display the names of all of the files and directories in your clone of the GitKit FarmData2 repository.
          </p>
          <p>
            Compare these files and directories to those in your origin repository on GitHub. Are there any differences? If so describe them here.
          </p>
        </statement>
        <response />
      </task>
    </exercise>

    <!-- VSCode KitClient -->
    <exercise 
      xml:id="ex-explore-clone-vscode"
      label="ex-explore-clone-vscode"
      component="vscode-kit-client">
      <statement>
        <p>
          The development environment displays the files and directories contained in your clone in the "Explorer" panel at the left of the window.  You can also see a list of these files and directories by using the <c>ls -a</c> command in the Terminal.
        </p>
        <p>
          Compare these files and directories to those in your origin repository on GitHub. Are there any differences? If so describe them here.
        </p>
      </statement>
      <response />
    </exercise>

    <!-- Both KitClients -->
    <exercise
      xml:id="ex-check-remotes"
      label="ex-check-remotes">
      <introduction>
        <p>
          In this exercise you will see that your clone keeps track of the location of your origin repository. It does this using a piece of information called a <term>remote</term>, which Git uses to store the URLs of remote repositories in the cloud (e.g. on GitHub).
        </p>
      </introduction>
      <task
        xml:id="ex-check-remotes-a"
        label="ex-check-remotes-a">
        <statement>
          <p>
            Use the following command to ask Git to display a list of the remote repositories (i.e. those on GitHub) that it knows about:
          </p>
          <p>
            <c>git remote -v</c>
          </p>
          <p>
            Copy and paste the output of the <c>git remote -v</c> command here.
          </p>
        </statement>
        <response />
      </task>

      <task
        xml:id="ex-check-remotes-b"
        label="ex-check-remotes-b">
        <statement>
          <p>
            Examine the output in <xref ref="ex-check-remotes-a" />. How can you tell from that output that your clone knows about your origin?
          </p>
        </statement>
        <choices randomize="yes">
          <choice correct="yes">
            <statement>
              <p>
                The "origin" lines have a URL with your GitHub username in them.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                There are lines that say "origin".
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                The "origin" lines have a URL that points to GitHub.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                It is not possible to tell from the output.
              </p>
            </statement>
          </choice>
        </choices>
        <hint>
          Look closely at the "origin" URLs.
        </hint>
      </task>

      <task
        xml:id="ex-check-remotes-c"
        label="ex-check-remotes-c">
        <statement>
          <p>
            How is the origin remote that you see in the output of the <xref ref="ex-check-remotes-a" /> command represented in <xref ref="fig-basic-workflow-clone" />?
          </p>
        </statement>
        <choices randomize="yes">
          <choice correct="yes">
            <statement>
              <p>
                The orange dotted arrow from the clone to the origin repository.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                The orange dotted arrow from the origin to the upstream repository.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                The orange dotted arrow from the clone to the upstream repository.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                The blue "Clone" arrow from the origin to the cloned repository.
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                The origin remote is not represented in the figure.
              </p>
            </statement>
          </choice>
        </choices>
        <hint>
          Which arrow would represent the clone knowing the location of the origin?
        </hint>
      </task>

      <task
        xml:id="ex-check-remotes-d"
        label="ex-check-remotes-d">
        <statement>  
          <p>
            Which step of the basic FOSS workflow requires that your clone know the location of your origin repository?
          </p>
        </statement>
        <choices randomize="yes">
          <choice>
            <statement>
              <p>
                Pull request
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Fork
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Clone
              </p>
            </statement>
          </choice>
          <choice>
            <statement>
              <p>
                Edit
              </p>
            </statement>
          </choice>
          <choice correct="yes">
            <statement>
              <p>
                Push
              </p>
            </statement>
          </choice>
        </choices>
        <hint>
          Think about which step of the basic FOSS workflow will need to send information from the clone back to the origin.
        </hint>
      </task>

    </exercise>
  </exercises>
</section>
