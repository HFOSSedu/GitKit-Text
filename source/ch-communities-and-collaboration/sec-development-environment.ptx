<?xml version="1.0" encoding="UTF-8"?>

<section
  xml:id="topic-development-environment"
  xmlns:xi="http://www.w3.org/2001/XInclude"
  >
  <title>Your Development Environment</title>

  <introduction
    xml:id="topic-dev-env-intro">
    <p>
      You now have been assigned an <term>issue</term> to work on and you have created a <term>fork</term> of the <term>upstream</term> GitKit FarmData2 repository into your GitHub space.
    </p>
    <p>
      To work on your issue you will need to setup your <term>development environment</term>.  Your development environment is where you will create your <term>clone</term> of the repository, where you will edit files, and where you will use `git` commands to add your changes to to your clone and <term>push</term> those changes to your <term>origin</term>.  
    </p>
    <p>
      Many FOSS contributors will setup the development environment on their personal machines. Because student machines vary greatly the GitKit provides a browser based development environment. This development environment runs in the cloud and you will access it using your web browser.  This development environment includes standard development tools but also has a few features designed specifically to help you stay on track when completing the GitKit's hands-on exercises.
    </p>
  </introduction>

  <subsection>
    <title>Starting the Development Environment</title>
    <introduction>
      <p>
        In this section you will learn how to start, configure, stop, and restart your development environment.
      </p>
    </introduction>
    <exercises>
      <title />
      <exercise>
        xml:id="ex-github-login"
        label="ex-github-login">
        <statement>
          <p>
            Your development environment will run in the cloud using a service called <term>GitHub Codespaces</term>. In order to do so log into the GitHub acccount that you listed in <xref ref="ex-github-account-url" />
          </p>
        </statement>
      </exercise>

      <exercise
        xml:id="ex-create-devenv"
        label="ex-create-devenv">
        <introduction>
          <p>
            The following tasks will guide you through the process of creating and configuring your development environment. 
          </p>
        </introduction>

        <task
          xml:id="ex-create-codespace"
          label="ex-create-codespace">
          <statement>
            <p>
              Click this link to <url href="https://codespaces.new/HFOSSedu/KitClient-Codespace?quickstart=1" visual="codespaces.new/HFOSSedu/KitClient-Codespace?quickstart=1">create your Development Enviornment</url>
            </p>
          </statement>
        </task>

        <task
          xml:id="ex-paste-pat-prompt"
          label="ex-paste-pat-prompt">
          <statement>
          <p>
              Wait for the development environment to be created. Your browser window will refresh and change a few times during the creation process. Please be patient as this can take a few minutes.
            </p>
            <p>
              After a few minutes, your browser window will look similar to <xref ref="fig-devenv-pat" /> including the prompt asking you to paste your GitHub Personal Access Token (PAT).
            </p>

            <figure 
              xml:id="fig-devenv-pat-prompt"               label="fig-devenv-pat-prompt">
              <caption>
                The GitKit development environment prompting for a GitHub PAT during creation.
              </caption>
              <image source="images/ch-communities-and-collaboration/DevEnv-Request-PAT.png" width="75%">
                <description>
                  The GitKit Development Environment prompting for a GitHub PAT during creation.
                </description>
              </image>
            </figure>
          </statement>
        </task>

        <task
          xml:id="ex-paste-pat"
          label="ex-paste-pat">
          <statement>
            <p>
              Paste the PAT that you created in <xref ref="topic-github-pat" /> and press enter.  Note, for security resasons your PAT is not displayed when it is pasted.
            </p>
            <p>
              If you have lost or did not save your PAT, revisit <xref ref="topic-github-pat" /> and create a new one.
            </p>
          </statement>
        </task>

        <task
          xml:id="ex-devenv-ready"
          label="ex-devenv-ready">
          <statement>
            <p>
              After pasting your PAT, the development environment will to finish being created. When it is fully created your browser window will look similar to <xref ref="fig-devenv-ready-blank" /> including the "Kit development environment is ready for use" message.
            </p>

            <figure 
              xml:id="fig-devenv-ready-blank"               label="fig-devenv-ready-blank">
              <caption>
                The GitKit development environment "Kit development environment is ready for use" message.
              </caption>
              <image source="images/ch-communities-and-collaboration/DevEnv-Request-PAT.png" width="75%">
                <description>
                  The GitKit Development Environment "Kit development environment is ready for use" message.
                </description>
              </image>
            </figure>
          </statement>
        </task>
      </exercise>
    </exercises>
  </subsection>

  <subsection
    xml:id="topic-git-client"
    label="topic-git-client">
    <title>The Git Client</title>
    <introduction>
      <p>
        Your development environment includes a <term>Git client</term>. The Git client is the tool that you will use to interact with Git repositories, such as the GitKit FarmData2 repository.
      </p>
      <p>
        There are lots of different Git clients. Some are graphical and some use a text interface. These exercises, introduce you to Git using the Git <term>command line interface (CLI)</term>. This is the most general way to interact with Git and will provide a conceptual foundation for using any other Git client that you might encounter.
      </p>
    </introduction>
    
    <exercises>
      <title />

      <exercise
        xml:id="ex-git-version"
        label="ex-git-version">
        <introduction>
          <p>
            The Git CLI is accessed by using the <c>git</c> command in the terminal.
          </p>
        </introduction>
        <task
          xml:id="ex-git-version-a"
          label="ex-git-version-a">
          <statement>
            <p>
              Using the <c>git</c> command without any additional arguments will display information about how to use <c>git</c>.
            </p>
            <p>
              Enter the command <c>git</c> into the TERMINAL pane in the development environment and press enter.
            </p>
          </statement>
        </task>

        <task
          xml:id="ex-git-version-b"
          label="ex-git-version-b">
          <statement>
            <p>
              Use the output from the <c>git</c> command in <xref ref="ex-git-version-a" /> to determine which of the following commands will cause, <c>git</c> to "Show the working tree status."
            </p>
          </statement>
          <choices randomize="yes">
          <choice correct="yes">
          <statement>
            <p>
              <c>git status</c>
            </p>
          </statement>
          <feedback>
            <p>
              The <c>git status</c> command causes <c>git</c> to display the status of the working tree.
            </p>
          </feedback>
          </choice>
          <choice>
          <statement>
            <p>
              <c>git tree</c>
            </p>
          </statement>
          <feedback>
            <p>
              Check the output of the <c>git</c> command.
            </p>
          </feedback>
          </choice>
          <choice>
          <statement>
            <p>
              <c>git working-tree</c>
            </p>
          </statement>
          <feedback>
            <p>
              Check the output of the <c>git</c> command.
            </p>
          </feedback>
          </choice>
                    <choice>
          <statement>
            <p>
              <c>git show</c>
            </p>
          </statement>
          <feedback>
            <p>
              Check the output of the <c>git</c> command.
            </p>
          </feedback>
          </choice>
          </choices>
          <hint>
            <p>
              Check the output of the <c>git</c> command for the command that will "Show the working tree status."
            </p>
          </hint>
        </task>
      </exercise>
    </exercises>
  </subsection>

  <subsection
    xml:id="topic-git-configuration"
    label="topic-git-configuration">
    <title>Configuring the Git Client</title>
    <introduction>
      <p>
        Recall from class that Git repositories maintain a complete history of all changes, including who made each change. To do this, Git needs to know a little bit of information about you.
      </p>
      <p>
        Git identifies the author of each change using two pieces of information: A name and an e-mail. For name, you might decide to your full name, or a nickname, or your GitHub username. Just keep in mind that whatever name you use will be associated with all of the changes you make. For e-mail, you can again use any valid e-mail associated with you. 
      </p>
      <p>
        The exercises in this section will guide you through the process of configuring the Git client in your development environment.
      </p>
    </introduction>

    <exercises>
      <title/>

      <exercise
        xml:id="ex-git-config-name"
        label="ex-git-config-name">
        <statement>
          <p>
            The <c>git config --global user.name "&lt;name&gt;"</c> command sets the name that Git will associate with your changes.
          </p>
          <p>
            Give a command that will set the name you want to have associated with your changes by replacing <c>&lt;name&gt;</c> with the name you wish to use.
          </p>
          <p>
            <var width="30" />
          </p>
        </statement>
        <setup>
          <var>
            <condition string='^git config --global user.name "[^&lt;].+[^&gt;]"$'>
              <feedback>
                <p>
                  This command will set the name associated with your changes in git.
                </p>
              </feedback>
            </condition>
            <condition string='^git config --global user.name ["]*&lt;.+&gt;["]*$'>
              <feedback>
                <p>
                  You should not include the &lt; and &gt; in your command.
                </p>
              </feedback>
            </condition>
            <condition string='^git config --global user.name [^"].+[^"]$'>
              <feedback>
                <p>
                  Be sure to use quotation marks around your name.
                </p>
              </feedback>
            </condition>
            <condition string=".*">
              <feedback>
                <p>
                  Reread the question and check the format of your command.
                </p>
              </feedback>
            </condition>
          </var>
        </setup>
      </exercise>

      <exercise
        xml:id="ex-git-config-email"
        label="ex-git-config-email">
        <statement>
          <p>
            The <c>git config --global user.email "&lt;email&gt;"</c> command sets the email address that Git will associate with your changes.
          </p>
          <p>
            Give a command that will set the email you want to have associated with your changes by replacing <c>&lt;email&gt;</c> with the email address you wish to use.
          </p>
          <p>
            <var width="30" />
          </p>
        </statement>
        <setup>
          <var>
            <condition string='^git config --global user.email "[^&lt;].+@.+[^&gt;]"$'>
              <feedback>
                <p>
                  This command will set the email associated with your changes in git.
                </p>
              </feedback>
            </condition>
            <condition string='^git config --global user.email "[^&lt;][^@]+[^&gt;]"$'>
              <feedback>
                <p>
                  Be sure you have entered a valid email address.
                </p>
              </feedback>
            </condition>
            <condition string='^git config --global user.email ["]*&lt;.+&gt;["]*$'>
              <feedback>
                <p>
                  You should not include the &lt; and &gt; in your command.
                </p>
              </feedback>
            </condition>
            <condition string='^git config --global user.email [^"].+[^"]$'>
              <feedback>
                <p>
                  Be sure to use quotation marks around your email.
                </p>
              </feedback>
            </condition>
            <condition string=".*">
              <feedback>
                <p>
                  Reread the question and check the format of your command.
                </p>
              </feedback>
            </condition>
          </var>
        </setup>
      </exercise>

      <exercise
        xml:id="ex-configure-git"
        label="ex-configure-git">
        <statement>
          <p>
            Enter your commands from <xref ref="ex-git-config-name" /> and <xref ref="ex-git-config-email" /> into the Terminal.
          </p>
          <p>
            Then use the command <c>git config --global --list</c> to display the Git configuration. Examine the output and select all of the Git configuration keys that have values assigned to them.
          </p>
        </statement>
        <choices randomize="yes">
          <choice correct="yes">
          <statement>
            <p>
              <c>user.name</c>
            </p>
          </statement>
          <feedback>
            <p>
              <c>user.name</c> should be set to the name you used above.
            </p>
          </feedback>
          </choice>
          <choice correct="yes">
          <statement>
            <p>
              <c>user.email</c>
            </p>
          </statement>
          <feedback>
            <p>
              <c>user.email</c> should be set to the email you used above.
            </p>
          </feedback>
          </choice>
          <choice correct="yes">
          <statement>
            <p>
              <c>core.editor</c>
            </p>
          </statement>
          <feedback>
            <p>
              <c>core.editor</c> should be set to the nano editor.
            </p>
          </feedback>
          </choice>   
          <choice>
          <statement>
            <p>
              <c>git.user</c>
            </p>
          </statement>
          <feedback>
            <p>
              <c>git.user</c> is not a setting.
            </p>
          </feedback>
          </choice>
          <choice>
          <statement>
            <p>
              <c>gitkit.class</c>
            </p>
          </statement>
          <feedback>
            <p>
              <c>gitkit.class</c> is not a setting.
            </p>
          </feedback>
          </choice>         
        </choices>
      </exercise>
    </exercises>
  </subsection>

  <subsection>
    <title>Adjusting some GitPod Settings</title>
    <introduction>
      <p>
        There are a few GitPod settings that you can change that will make working with your development environment more convenient.
      </p>
    </introduction>
    <exercises>
      <title />
      <exercise
        xml:id="ex-gitpod-settings"
        label="ex-gitpod-settings">
        <introduction>
          <p>
            Use the following steps to adjust your GitPod settings.
          </p>
        </introduction>
        <task 
          xml:id="ex-gitpod-settings-a"
          label="ex-gitpod-settings-a">
          <statement>
            <p>
              Open your GitPod workspaces in a browser by visiting <url href="https://gitpod.io/workspaces" />.
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-gitpod-settings-b"
          label="ex-gitpod-settings-b">
          <statement>
            <p>
              Choose "Rename" from the "⋮" (three vertical dots) menu to the right of the KitClient workspace and rename the workspace to be "GitKit Dev Env" or something else that you will remember easily.
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-gitpod-settings-c"
          label="ex-gitpod-settings-c">
          <statement>
            <p>
              Click the "Pushpin" icon, or choose "Pin" from the "⋮" (three vertical dots) menu to the right of the "GitKit Dev Env" workspace.
            </p> 
            <p>
              This will <term>Pin</term> your GitKit workspace making it easier to find, and will also prevent it from becoming inactive or being deleted if you don't use it for a few days.
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-gitpod-settings-d"
          label="ex-gitpod-settings-d">
          <statement>
            <p>
              Open your GitPod preferences in a browser by visiting <url href="https://gitpod.io/user/preferences" />.
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-gitpod-settings-e"
          label="ex-gitpod-settings-e">
          <statement>
            <p>
              Set your “Timeout” to 10 minutes. This will stop your development environment if you are away from it for more than 5 minutes.  This will help to ensure that your free GitPod credits are not accidentally used up if you forget to stop your development environment.
            </p>
            <p>
              If your development environment times out and stops you can restart it using the steps in <xref ref="topic-restarting-dev-env" />.
            </p>
          </statement>
        </task>
      </exercise>
    </exercises>
  </subsection>

  <subsection>
    <title>Stopping your Development Environment</title>
    <introduction>
      <p>
        At some point you will complete this assignment or want to take a break and do other things. When you do so, you should stop your development environment.
      </p>
    </introduction>
    <exercises>
      <title />
      <exercise
        xml:id="ex-stopping-dev-env"
        label="ex-stopping-dev-env">
        <introduction>
          <p>
            You can stop your development environment using the following steps.
          </p>
        </introduction>
        <task 
          xml:id="ex-stopping-dev-env-a"
          label="ex-stopping-dev-env-a">
          <statement>
            <p>
              Open your GitPod workspaces in a browser by visiting <url href="https://gitpod.io/workspaces" />
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-stopping-dev-env-b"
          label="ex-stopping-dev-env-b">
          <statement>
            <p>
              Choose "Stop" from the "⋮" (three vertical dots) menu to the right of the "GitKit Dev Env" workspace.
            </p>
          </statement>
        </task>
      </exercise>
    </exercises>
  </subsection>

  <subsection
    xml:id="topic-restarting-dev-env">
    <title>Re-starting your Development Environment</title>
    <introduction>
      <p>
        When you already have a GitKit development environment and want to continue working on the GitKit exercises, you will need to <term>restart</term> it.
      </p>
    </introduction>
    <exercises>
      <title />
      <exercise
        xml:id="ex-restarting-dev-env"
        label="ex-restarting-dev-env">
        <introduction>
          <p>
            Restart your development environment using the following steps.
          </p>
        </introduction>
        <task 
          xml:id="ex-restarting-dev-env-a"
          label="ex-restarting-dev-env-a">
          <statement>
            <p>
              Open your GitPod workspaces in a browser by visiting <url href="https://gitpod.io/workspaces" />
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-restarting-dev-env-b"
          label="ex-restarting-dev-env-b">
          <statement>
            <p>
              Click the name of your "GitKit Dev Env" workspace or choose "Open" from the "⋮" (three vertical dots) menu to the right of its name.
            </p>
          </statement>
        </task>
        <task 
          xml:id="ex-restarting-dev-env-c"
          label="ex-restarting-dev-env-c">
          <statement>
            <p>
              Wait for the text similar to that in <xref ref="ex-create-kit-client-linux-c" /> to appear and click the link.
            </p>
          </statement>
        </task>
      </exercise>
    </exercises>
  </subsection>

</section>
